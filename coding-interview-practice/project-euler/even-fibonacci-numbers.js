// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ... By considering the terms in the Fibonacci sequence whose values do not exceed n, find the sum of the even-valued terms.

function fiboEvenSum(n) {
    let firstNum = 1;
    let secondNum = 2;
    let sequence = [firstNum, secondNum];
    if (n < 2) {
        return 0
    }
    while (firstNum + secondNum <= n) {
        let newNum = firstNum + secondNum;
        sequence.push(newNum);
        firstNum = secondNum;
        secondNum = newNum;
    }
    let result = filterOutOdds(sequence)
    return result.reduce((a,b)=>a+b)
    // return result.reduce;
}

function filterOutOdds(fibonacciArray) {
    let evens = []
    for (let i = 0; i < fibonacciArray.length; i++) {
        if (fibonacciArray[i] % 2 == 0) {
            evens.push(fibonacciArray[i]);
        }
    }
    return evens;
}
// console.log(fiboEvenSum(4))